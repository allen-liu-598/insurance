//created on: Nov 1, 2018
package Rules

//list any import classes here.
import com.model.*;
import com.enums.*;

//list of functional classes import
import java.util.Calendar;
import java.util.Locale;
import static java.util.Calendar.*;
import java.util.Date;

//Functions
function double calculateSquare (double value) {
   return value * value;
}

function int getDiffYears(Date first, Date last) {
    Calendar a = Calendar.getInstance(Locale.US);
    Calendar b = Calendar.getInstance(Locale.US);
    a.setTime(first);
    b.setTime(last);

    int diff = b.get(Calendar.YEAR) - a.get(Calendar.YEAR);
    if (a.get(Calendar.MONTH) > b.get(Calendar.MONTH) ||
        (a.get(Calendar.MONTH) == b.get(Calendar.MONTH) && a.get(Calendar.DATE) > b.get(Calendar.DATE))) {
        diff--;
    }
    return diff;
}
function boolean licenseChecker(DriverCategory category)
{
    boolean ret = false;
    switch (category) {
                case B1:  ret = true;
                         break;
                case AM:  ret = true;
                         break;
                case A1:  ret = true;
                         break;
                default:  ret = false;
                         break;
            }
    return ret;
}
function double accidentsScore(int accidents,int experience)
{
    double ret = 0.0;
    ret = accidents/experience;

    return ret;
}

rule "test" salience 23
   when
   	c:Customer(username != null)
   then
   	System.out.println("Customer username is not null");
   end


//Rules
rule "Set Beneficiary[true]" salience 25
    when
        c:Customer(username == null)
    then
        c.setBeneficiary(true);
        System.out.println("Customer is transformed into beneficiary");
end

rule "Set Beneficiary[false]" salience 24
    when
        c:Customer(username != null)
    then
        c.setBeneficiary(false);
end

rule "Default gender"  salience 22
    when
        p:Profile(gender == null)
    then
        p.setGender(Gender.MALE);
end

rule "Set male gender from ssc <2000" salience 21
   when
      p:Profile(ssc matches "/^1+/gm")
   then
      p.setGender(Gender.MALE);
end

rule "Set male gender from ssc <2100" salience 20
   when
      p:Profile(ssc matches "/^5+/gm")
   then
      p.setGender(Gender.MALE);
end

rule "Set female gender from ssc <2000" salience 19
   when
      p:Profile(ssc matches "/^2+/gm")
   then
      p.setGender(Gender.MALE);
end

rule "Set female gender from ssc <2100" salience 18
   when
      p:Profile(ssc matches "/^6+/gm")
   then
      p.setGender(Gender.MALE);
end

rule "Set birthday from ssc" salience 17
   when
      p:Profile(ssc matches "/^6+/gm")
   then
      p.setGender(Gender.MALE);
end

rule "Age from birthday" salience 16
    when
        p:Profile(birthday != null)
    then
        Date curent = new Date();
        p.setAge(getDiffYears(p.getBirthday(),curent));
 end

rule "Country[Romania] from phonenumber" salience 15
    when
        p:Profile(phonenumber matches "/^0040+/gm")
    then
        p.setCountry("Romania");
 end

rule "Country[R.Moldova] from phonenumber" salience 14
     when
         p:Profile(phonenumber matches "/^00373+/gm")
     then
        p.setCountry("R.Moldova");
  end

rule "License cancellation" salience 13
     when
         p:Profile(age < 16)
     then
        p.getCustomer().getAutodata().setLicenseId("");
        p.getCustomer().getAutodata().setExprience(0);
        p.getCustomer().getAutodata().setAccidents(0);
        System.out.println("License cancellation");
  end

rule "Wrong license" salience 12
    when
        p:Profile((age <18 && age>=16) && licenseChecker(customer.autodata.category))
    then
        p.getCustomer().getAutodata().setLicenseId("");
        p.getCustomer().getAutodata().setExprience(0);
        p.getCustomer().getAutodata().setAccidents(0);
        System.out.println("Wrong license");
 end

rule "Experience category[<5 years]" salience 12
    when
        ad:AutoData(exprience <5)
    then
        ad.setExperienceLevel(ExperienceLevel.NEWBIE);
 end

rule "Experience category[between 5 and 15 years]" salience 11
    when
        ad:AutoData(exprience >= 5 && exprience < 15)
    then
        ad.setExperienceLevel(ExperienceLevel.INTERMEDIATE);
 end

rule "Experience category[>15 years]" salience 10
    when
        ad:AutoData(exprience > 15)
    then
        ad.setExperienceLevel(ExperienceLevel.EXPERT);
 end

rule "Accident level[Low]" salience 9
    when
        ad:AutoData(accidentsScore(accidents,exprience) < 0.5)
    then
        ad.setAccidentsLevel(AccidentsLevel.LOW);
 end

rule "Accident level[Medium]" salience 8
    when
        ad:AutoData(accidentsScore(accidents,exprience) >= 0.5 && accidentsScore(accidents,exprience) <1)
    then
        ad.setAccidentsLevel(AccidentsLevel.MEDIUM);
 end

rule "Accident level[High]" salience 7
    when
        ad:AutoData(accidentsScore(accidents,exprience) >= 1 && accidentsScore(accidents,exprience) <1.5)
    then
        ad.setAccidentsLevel(AccidentsLevel.HIGH);
 end

rule "Accident level[VeryHigh]" salience 6
    when
        ad:AutoData(accidentsScore(accidents,exprience) >= 1.5)
    then
        ad.setAccidentsLevel(AccidentsLevel.VERYHIGH);
 end

rule "Health care needs[High]" salience 5
    when
        h:HealthData(customer.profile.age >70)
    then
        h.setHealthcareNeeds(HealthCareNeeds.HIGH);
 end

 rule "Health care needs[Loe]" salience 4
     when
         h:HealthData(customer.profile.age <30)
     then
         h.setHealthcareNeeds(HealthCareNeeds.LOW);
  end

rule "Health care needs[Medium{smoker}]" salience 3
     when
         h:HealthData(customer.profile.age >40 && smoker == true)
     then
         h.setHealthcareNeeds(HealthCareNeeds.MEDIUM);
  end

rule "Health care needs[High{smoker}]" salience 2
     when
         h:HealthData(customer.profile.age >60 && smoker == true)
     then
         h.setHealthcareNeeds(HealthCareNeeds.HIGH);
  end

rule "Purpose default" salience 1
    when
        t:TravelData(pourpose == "")
    then
        t.setPourpose(Purpose.REST);
 end